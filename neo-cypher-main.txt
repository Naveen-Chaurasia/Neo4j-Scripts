LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
WITH DISTINCT line
MERGE (category:Category{name: line.`Category`})
CREATE (P:Product {name: line.`Product name`})


LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
match (c:Category{name: line.`Category`})
MERGE (p:Product{name:line.`Product name `})
with c,p
MERGE (p)-[:Product_of]->(c)
return p,c


LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
match (p:Product{name: line.`Product name `})
MERGE (pc:Product_component{name:line.`Component `})
with p,pc
MERGE (pc)-[:component_of]->(p)
return p,pc

LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line with line 
match (p:Product{name: line.`Product name `})
match (pc:Product_component{name:line.`Component `,Al_content:line.`Aluminium `,Cu_content:line.`Copper `,Steel_content:line.`Steel `,Plastic_content:line.`Plastic `,Li_ion_Battery_Content:line.`Li_ion battery`,PCB_content:line.`PCB `,Flat_Panel_glass:line.`Flat panel glass`,CRT_glass:line.`CRT glass `,other_glass:line.`Other glass`,other_metal_content:line.`Other metals`,other_contents:line.`Others`,total_mass:line.`Total mass (g)`})
with p,pc
MERGE (pc)-[:component_of]->(p)
return p,pc


==============================================================================


LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
WITH DISTINCT line
MERGE (category:Category{name: line.`Category`})
CREATE (P:Product {name: line.`Product name`})


LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
match (c:Category{name: line.`Category`})
MERGE (p:Product{name:line.`Product name `})
with c,p
MERGE (p)-[:Product_of]->(c)
return p,c


LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
match (p:Product{name: line.`Product name `})
CREATE (pc:Product_component{name:line.`Component `,Al_content:line.`Aluminium `,Cu_content:line.`Copper `,Steel_content:line.`Steel `,Plastic_content:line.`Plastic `,Li_ion_Battery_Content:line.`Li_ion battery`,PCB_content:line.`PCB `,Flat_Panel_glass:line.`Flat panel glass`,CRT_glass:line.`CRT glass `,other_glass:line.`Other glass`,other_metal_content:line.`Other metals`,other_contents:line.`Others`,total_mass:line.`Total mass (g)`})
with p,pc
MERGE (pc)-[:component_of]->(p)
return p,pc

==========================================================================================



LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
WITH DISTINCT line
MERGE (c:Category{name: line.`Category`})
MERGE (p:Product{name:line.`Product name `})
MERGE (p)-[:Product_of]->(c)
CREATE (pc:Product_component{name:line.`Component `,Al_content:line.`Aluminium `,Cu_content:line.`Copper `,Steel_content:line.`Steel `,Plastic_content:line.`Plastic `,Li_ion_Battery_Content:line.`Li_ion battery`,PCB_content:line.`PCB `,Flat_Panel_glass:line.`Flat panel glass`,CRT_glass:line.`CRT glass `,other_glass:line.`Other glass`,other_metal_content:line.`Other metals`,other_contents:line.`Others`,total_mass:line.`Total mass (g)`})
MERGE (pc)-[:component_of]->(p)
return p,pc,c


GRANT ROLE admin TO jake1



LOAD CSV WITH HEADERS 
FROM 'file:///main1.csv' AS line
WITH DISTINCT line
MERGE (c:Category{name: line.`Category`})
MERGE (p:Products{name:line.`Product name `})
MERGE (p)-[:Product_of]->(c)
CREATE (pc:ProductComponents{name:line.`Component `,Al_content:line.`Aluminium `,Cu_content:line.`Copper `,Steel_content:line.`Steel `,Plastic_content:line.`Plastic `,Li_ion_Battery_Content:line.`Li_ion battery`,PCB_content:line.`PCB `,Flat_Panel_glass:line.`Flat panel glass`,CRT_glass:line.`CRT glass `,other_glass:line.`Other glass`,other_metal_content:line.`Other metals`,other_contents:line.`Others`,total_mass:line.`Total mass (g)`})
MERGE (pc)-[:component_of]->(p)
return p,pc,c


SHOW CONSTRAINT
CREATE CONSTRAINT ON (c:Category) ASSERT c.name IS UNIQUE;
CREATE CONSTRAINT ON (p:Product) ASSERT p.name IS UNIQUE;


http://localhost:7474/db/neo4j/tx
{
  "statements": [
    {
      "statement": "match (n:Category) RETURN n"
    }
  ]
}



match (n:Category) match (p:Products) MERGE (p)-[x:Product_of]->(c) RETURN n,p,x

MATCH (pc:ProductComponents)
match (p:Products)
RETURN sum(toInteger(pc.Cu_content))